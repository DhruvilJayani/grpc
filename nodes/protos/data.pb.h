// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: data.proto
// Protobuf C++ Version: 5.29.3

#ifndef data_2eproto_2epb_2eh
#define data_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_data_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_data_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_data_2eproto;
namespace crashrecord {
class CrashRecord;
struct CrashRecordDefaultTypeInternal;
extern CrashRecordDefaultTypeInternal _CrashRecord_default_instance_;
class CreateCrashRecordRequest;
struct CreateCrashRecordRequestDefaultTypeInternal;
extern CreateCrashRecordRequestDefaultTypeInternal _CreateCrashRecordRequest_default_instance_;
class CreateCrashRecordResponse;
struct CreateCrashRecordResponseDefaultTypeInternal;
extern CreateCrashRecordResponseDefaultTypeInternal _CreateCrashRecordResponse_default_instance_;
class DeleteCrashRecordRequest;
struct DeleteCrashRecordRequestDefaultTypeInternal;
extern DeleteCrashRecordRequestDefaultTypeInternal _DeleteCrashRecordRequest_default_instance_;
class DeleteCrashRecordResponse;
struct DeleteCrashRecordResponseDefaultTypeInternal;
extern DeleteCrashRecordResponseDefaultTypeInternal _DeleteCrashRecordResponse_default_instance_;
class GetCrashRecordRequest;
struct GetCrashRecordRequestDefaultTypeInternal;
extern GetCrashRecordRequestDefaultTypeInternal _GetCrashRecordRequest_default_instance_;
class GetCrashRecordResponse;
struct GetCrashRecordResponseDefaultTypeInternal;
extern GetCrashRecordResponseDefaultTypeInternal _GetCrashRecordResponse_default_instance_;
class ListCrashRecordsRequest;
struct ListCrashRecordsRequestDefaultTypeInternal;
extern ListCrashRecordsRequestDefaultTypeInternal _ListCrashRecordsRequest_default_instance_;
class ListCrashRecordsResponse;
struct ListCrashRecordsResponseDefaultTypeInternal;
extern ListCrashRecordsResponseDefaultTypeInternal _ListCrashRecordsResponse_default_instance_;
}  // namespace crashrecord
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace crashrecord {

// ===================================================================


// -------------------------------------------------------------------

class ListCrashRecordsRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:crashrecord.ListCrashRecordsRequest) */ {
 public:
  inline ListCrashRecordsRequest() : ListCrashRecordsRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListCrashRecordsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListCrashRecordsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListCrashRecordsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListCrashRecordsRequest(const ListCrashRecordsRequest& from) : ListCrashRecordsRequest(nullptr, from) {}
  inline ListCrashRecordsRequest(ListCrashRecordsRequest&& from) noexcept
      : ListCrashRecordsRequest(nullptr, std::move(from)) {}
  inline ListCrashRecordsRequest& operator=(const ListCrashRecordsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListCrashRecordsRequest& operator=(ListCrashRecordsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListCrashRecordsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListCrashRecordsRequest* internal_default_instance() {
    return reinterpret_cast<const ListCrashRecordsRequest*>(
        &_ListCrashRecordsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(ListCrashRecordsRequest& a, ListCrashRecordsRequest& b) { a.Swap(&b); }
  inline void Swap(ListCrashRecordsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListCrashRecordsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListCrashRecordsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ListCrashRecordsRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ListCrashRecordsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ListCrashRecordsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crashrecord.ListCrashRecordsRequest"; }

 protected:
  explicit ListCrashRecordsRequest(::google::protobuf::Arena* arena);
  ListCrashRecordsRequest(::google::protobuf::Arena* arena, const ListCrashRecordsRequest& from);
  ListCrashRecordsRequest(::google::protobuf::Arena* arena, ListCrashRecordsRequest&& from) noexcept
      : ListCrashRecordsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:crashrecord.ListCrashRecordsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListCrashRecordsRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_data_2eproto;
};
// -------------------------------------------------------------------

class GetCrashRecordRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crashrecord.GetCrashRecordRequest) */ {
 public:
  inline GetCrashRecordRequest() : GetCrashRecordRequest(nullptr) {}
  ~GetCrashRecordRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetCrashRecordRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetCrashRecordRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetCrashRecordRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetCrashRecordRequest(const GetCrashRecordRequest& from) : GetCrashRecordRequest(nullptr, from) {}
  inline GetCrashRecordRequest(GetCrashRecordRequest&& from) noexcept
      : GetCrashRecordRequest(nullptr, std::move(from)) {}
  inline GetCrashRecordRequest& operator=(const GetCrashRecordRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetCrashRecordRequest& operator=(GetCrashRecordRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetCrashRecordRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetCrashRecordRequest* internal_default_instance() {
    return reinterpret_cast<const GetCrashRecordRequest*>(
        &_GetCrashRecordRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(GetCrashRecordRequest& a, GetCrashRecordRequest& b) { a.Swap(&b); }
  inline void Swap(GetCrashRecordRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetCrashRecordRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetCrashRecordRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetCrashRecordRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetCrashRecordRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetCrashRecordRequest& from) { GetCrashRecordRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetCrashRecordRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crashrecord.GetCrashRecordRequest"; }

 protected:
  explicit GetCrashRecordRequest(::google::protobuf::Arena* arena);
  GetCrashRecordRequest(::google::protobuf::Arena* arena, const GetCrashRecordRequest& from);
  GetCrashRecordRequest(::google::protobuf::Arena* arena, GetCrashRecordRequest&& from) noexcept
      : GetCrashRecordRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCollisionIdFieldNumber = 1,
  };
  // int32 collisionId = 1;
  void clear_collisionid() ;
  ::int32_t collisionid() const;
  void set_collisionid(::int32_t value);

  private:
  ::int32_t _internal_collisionid() const;
  void _internal_set_collisionid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:crashrecord.GetCrashRecordRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetCrashRecordRequest& from_msg);
    ::int32_t collisionid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_data_2eproto;
};
// -------------------------------------------------------------------

class DeleteCrashRecordResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crashrecord.DeleteCrashRecordResponse) */ {
 public:
  inline DeleteCrashRecordResponse() : DeleteCrashRecordResponse(nullptr) {}
  ~DeleteCrashRecordResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteCrashRecordResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteCrashRecordResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteCrashRecordResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteCrashRecordResponse(const DeleteCrashRecordResponse& from) : DeleteCrashRecordResponse(nullptr, from) {}
  inline DeleteCrashRecordResponse(DeleteCrashRecordResponse&& from) noexcept
      : DeleteCrashRecordResponse(nullptr, std::move(from)) {}
  inline DeleteCrashRecordResponse& operator=(const DeleteCrashRecordResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteCrashRecordResponse& operator=(DeleteCrashRecordResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteCrashRecordResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteCrashRecordResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteCrashRecordResponse*>(
        &_DeleteCrashRecordResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(DeleteCrashRecordResponse& a, DeleteCrashRecordResponse& b) { a.Swap(&b); }
  inline void Swap(DeleteCrashRecordResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteCrashRecordResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteCrashRecordResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeleteCrashRecordResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteCrashRecordResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteCrashRecordResponse& from) { DeleteCrashRecordResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeleteCrashRecordResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crashrecord.DeleteCrashRecordResponse"; }

 protected:
  explicit DeleteCrashRecordResponse(::google::protobuf::Arena* arena);
  DeleteCrashRecordResponse(::google::protobuf::Arena* arena, const DeleteCrashRecordResponse& from);
  DeleteCrashRecordResponse(::google::protobuf::Arena* arena, DeleteCrashRecordResponse&& from) noexcept
      : DeleteCrashRecordResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFieldNumber = 2,
    kSuccessFieldNumber = 1,
  };
  // string message = 2;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:crashrecord.DeleteCrashRecordResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      53, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteCrashRecordResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr message_;
    bool success_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_data_2eproto;
};
// -------------------------------------------------------------------

class DeleteCrashRecordRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crashrecord.DeleteCrashRecordRequest) */ {
 public:
  inline DeleteCrashRecordRequest() : DeleteCrashRecordRequest(nullptr) {}
  ~DeleteCrashRecordRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteCrashRecordRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteCrashRecordRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteCrashRecordRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteCrashRecordRequest(const DeleteCrashRecordRequest& from) : DeleteCrashRecordRequest(nullptr, from) {}
  inline DeleteCrashRecordRequest(DeleteCrashRecordRequest&& from) noexcept
      : DeleteCrashRecordRequest(nullptr, std::move(from)) {}
  inline DeleteCrashRecordRequest& operator=(const DeleteCrashRecordRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteCrashRecordRequest& operator=(DeleteCrashRecordRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteCrashRecordRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteCrashRecordRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteCrashRecordRequest*>(
        &_DeleteCrashRecordRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(DeleteCrashRecordRequest& a, DeleteCrashRecordRequest& b) { a.Swap(&b); }
  inline void Swap(DeleteCrashRecordRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteCrashRecordRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteCrashRecordRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeleteCrashRecordRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteCrashRecordRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteCrashRecordRequest& from) { DeleteCrashRecordRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeleteCrashRecordRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crashrecord.DeleteCrashRecordRequest"; }

 protected:
  explicit DeleteCrashRecordRequest(::google::protobuf::Arena* arena);
  DeleteCrashRecordRequest(::google::protobuf::Arena* arena, const DeleteCrashRecordRequest& from);
  DeleteCrashRecordRequest(::google::protobuf::Arena* arena, DeleteCrashRecordRequest&& from) noexcept
      : DeleteCrashRecordRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCollisionIdFieldNumber = 1,
  };
  // int32 collisionId = 1;
  void clear_collisionid() ;
  ::int32_t collisionid() const;
  void set_collisionid(::int32_t value);

  private:
  ::int32_t _internal_collisionid() const;
  void _internal_set_collisionid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:crashrecord.DeleteCrashRecordRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteCrashRecordRequest& from_msg);
    ::int32_t collisionid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_data_2eproto;
};
// -------------------------------------------------------------------

class CreateCrashRecordResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crashrecord.CreateCrashRecordResponse) */ {
 public:
  inline CreateCrashRecordResponse() : CreateCrashRecordResponse(nullptr) {}
  ~CreateCrashRecordResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateCrashRecordResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateCrashRecordResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateCrashRecordResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateCrashRecordResponse(const CreateCrashRecordResponse& from) : CreateCrashRecordResponse(nullptr, from) {}
  inline CreateCrashRecordResponse(CreateCrashRecordResponse&& from) noexcept
      : CreateCrashRecordResponse(nullptr, std::move(from)) {}
  inline CreateCrashRecordResponse& operator=(const CreateCrashRecordResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateCrashRecordResponse& operator=(CreateCrashRecordResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateCrashRecordResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateCrashRecordResponse* internal_default_instance() {
    return reinterpret_cast<const CreateCrashRecordResponse*>(
        &_CreateCrashRecordResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(CreateCrashRecordResponse& a, CreateCrashRecordResponse& b) { a.Swap(&b); }
  inline void Swap(CreateCrashRecordResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateCrashRecordResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateCrashRecordResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateCrashRecordResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateCrashRecordResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateCrashRecordResponse& from) { CreateCrashRecordResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateCrashRecordResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crashrecord.CreateCrashRecordResponse"; }

 protected:
  explicit CreateCrashRecordResponse(::google::protobuf::Arena* arena);
  CreateCrashRecordResponse(::google::protobuf::Arena* arena, const CreateCrashRecordResponse& from);
  CreateCrashRecordResponse(::google::protobuf::Arena* arena, CreateCrashRecordResponse&& from) noexcept
      : CreateCrashRecordResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFieldNumber = 2,
    kSuccessFieldNumber = 1,
  };
  // string message = 2;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:crashrecord.CreateCrashRecordResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      53, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateCrashRecordResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr message_;
    bool success_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_data_2eproto;
};
// -------------------------------------------------------------------

class CrashRecord final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crashrecord.CrashRecord) */ {
 public:
  inline CrashRecord() : CrashRecord(nullptr) {}
  ~CrashRecord() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CrashRecord* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CrashRecord));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CrashRecord(
      ::google::protobuf::internal::ConstantInitialized);

  inline CrashRecord(const CrashRecord& from) : CrashRecord(nullptr, from) {}
  inline CrashRecord(CrashRecord&& from) noexcept
      : CrashRecord(nullptr, std::move(from)) {}
  inline CrashRecord& operator=(const CrashRecord& from) {
    CopyFrom(from);
    return *this;
  }
  inline CrashRecord& operator=(CrashRecord&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CrashRecord& default_instance() {
    return *internal_default_instance();
  }
  static inline const CrashRecord* internal_default_instance() {
    return reinterpret_cast<const CrashRecord*>(
        &_CrashRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(CrashRecord& a, CrashRecord& b) { a.Swap(&b); }
  inline void Swap(CrashRecord* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CrashRecord* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CrashRecord* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CrashRecord>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CrashRecord& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CrashRecord& from) { CrashRecord::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CrashRecord* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crashrecord.CrashRecord"; }

 protected:
  explicit CrashRecord(::google::protobuf::Arena* arena);
  CrashRecord(::google::protobuf::Arena* arena, const CrashRecord& from);
  CrashRecord(::google::protobuf::Arena* arena, CrashRecord&& from) noexcept
      : CrashRecord(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCrashDateFieldNumber = 1,
    kCrashTimeFieldNumber = 2,
    kBoroughFieldNumber = 3,
    kLocationFieldNumber = 7,
    kOnStreetNameFieldNumber = 8,
    kCrossStreetNameFieldNumber = 9,
    kOffStreetNameFieldNumber = 10,
    kContributingFactorVehicle1FieldNumber = 19,
    kContributingFactorVehicle2FieldNumber = 20,
    kContributingFactorVehicle3FieldNumber = 21,
    kContributingFactorVehicle4FieldNumber = 22,
    kContributingFactorVehicle5FieldNumber = 23,
    kVehicleTypeCode1FieldNumber = 25,
    kVehicleTypeCode2FieldNumber = 26,
    kVehicleTypeCode3FieldNumber = 27,
    kVehicleTypeCode4FieldNumber = 28,
    kVehicleTypeCode5FieldNumber = 29,
    kLatitudeFieldNumber = 5,
    kLongitudeFieldNumber = 6,
    kZipCodeFieldNumber = 4,
    kNumberOfPersonsInjuredFieldNumber = 11,
    kNumberOfPersonsKilledFieldNumber = 12,
    kNumberOfPedestriansInjuredFieldNumber = 13,
    kNumberOfPedestriansKilledFieldNumber = 14,
    kNumberOfCyclistInjuredFieldNumber = 15,
    kNumberOfCyclistKilledFieldNumber = 16,
    kNumberOfMotoristInjuredFieldNumber = 17,
    kNumberOfMotoristKilledFieldNumber = 18,
    kCollisionIdFieldNumber = 24,
  };
  // string crashDate = 1;
  void clear_crashdate() ;
  const std::string& crashdate() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_crashdate(Arg_&& arg, Args_... args);
  std::string* mutable_crashdate();
  PROTOBUF_NODISCARD std::string* release_crashdate();
  void set_allocated_crashdate(std::string* value);

  private:
  const std::string& _internal_crashdate() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_crashdate(
      const std::string& value);
  std::string* _internal_mutable_crashdate();

  public:
  // string crashTime = 2;
  void clear_crashtime() ;
  const std::string& crashtime() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_crashtime(Arg_&& arg, Args_... args);
  std::string* mutable_crashtime();
  PROTOBUF_NODISCARD std::string* release_crashtime();
  void set_allocated_crashtime(std::string* value);

  private:
  const std::string& _internal_crashtime() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_crashtime(
      const std::string& value);
  std::string* _internal_mutable_crashtime();

  public:
  // string borough = 3;
  void clear_borough() ;
  const std::string& borough() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_borough(Arg_&& arg, Args_... args);
  std::string* mutable_borough();
  PROTOBUF_NODISCARD std::string* release_borough();
  void set_allocated_borough(std::string* value);

  private:
  const std::string& _internal_borough() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_borough(
      const std::string& value);
  std::string* _internal_mutable_borough();

  public:
  // string location = 7;
  void clear_location() ;
  const std::string& location() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_location(Arg_&& arg, Args_... args);
  std::string* mutable_location();
  PROTOBUF_NODISCARD std::string* release_location();
  void set_allocated_location(std::string* value);

  private:
  const std::string& _internal_location() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_location(
      const std::string& value);
  std::string* _internal_mutable_location();

  public:
  // string onStreetName = 8;
  void clear_onstreetname() ;
  const std::string& onstreetname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_onstreetname(Arg_&& arg, Args_... args);
  std::string* mutable_onstreetname();
  PROTOBUF_NODISCARD std::string* release_onstreetname();
  void set_allocated_onstreetname(std::string* value);

  private:
  const std::string& _internal_onstreetname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_onstreetname(
      const std::string& value);
  std::string* _internal_mutable_onstreetname();

  public:
  // string crossStreetName = 9;
  void clear_crossstreetname() ;
  const std::string& crossstreetname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_crossstreetname(Arg_&& arg, Args_... args);
  std::string* mutable_crossstreetname();
  PROTOBUF_NODISCARD std::string* release_crossstreetname();
  void set_allocated_crossstreetname(std::string* value);

  private:
  const std::string& _internal_crossstreetname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_crossstreetname(
      const std::string& value);
  std::string* _internal_mutable_crossstreetname();

  public:
  // string offStreetName = 10;
  void clear_offstreetname() ;
  const std::string& offstreetname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_offstreetname(Arg_&& arg, Args_... args);
  std::string* mutable_offstreetname();
  PROTOBUF_NODISCARD std::string* release_offstreetname();
  void set_allocated_offstreetname(std::string* value);

  private:
  const std::string& _internal_offstreetname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_offstreetname(
      const std::string& value);
  std::string* _internal_mutable_offstreetname();

  public:
  // string contributingFactorVehicle1 = 19;
  void clear_contributingfactorvehicle1() ;
  const std::string& contributingfactorvehicle1() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_contributingfactorvehicle1(Arg_&& arg, Args_... args);
  std::string* mutable_contributingfactorvehicle1();
  PROTOBUF_NODISCARD std::string* release_contributingfactorvehicle1();
  void set_allocated_contributingfactorvehicle1(std::string* value);

  private:
  const std::string& _internal_contributingfactorvehicle1() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_contributingfactorvehicle1(
      const std::string& value);
  std::string* _internal_mutable_contributingfactorvehicle1();

  public:
  // string contributingFactorVehicle2 = 20;
  void clear_contributingfactorvehicle2() ;
  const std::string& contributingfactorvehicle2() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_contributingfactorvehicle2(Arg_&& arg, Args_... args);
  std::string* mutable_contributingfactorvehicle2();
  PROTOBUF_NODISCARD std::string* release_contributingfactorvehicle2();
  void set_allocated_contributingfactorvehicle2(std::string* value);

  private:
  const std::string& _internal_contributingfactorvehicle2() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_contributingfactorvehicle2(
      const std::string& value);
  std::string* _internal_mutable_contributingfactorvehicle2();

  public:
  // string contributingFactorVehicle3 = 21;
  void clear_contributingfactorvehicle3() ;
  const std::string& contributingfactorvehicle3() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_contributingfactorvehicle3(Arg_&& arg, Args_... args);
  std::string* mutable_contributingfactorvehicle3();
  PROTOBUF_NODISCARD std::string* release_contributingfactorvehicle3();
  void set_allocated_contributingfactorvehicle3(std::string* value);

  private:
  const std::string& _internal_contributingfactorvehicle3() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_contributingfactorvehicle3(
      const std::string& value);
  std::string* _internal_mutable_contributingfactorvehicle3();

  public:
  // string contributingFactorVehicle4 = 22;
  void clear_contributingfactorvehicle4() ;
  const std::string& contributingfactorvehicle4() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_contributingfactorvehicle4(Arg_&& arg, Args_... args);
  std::string* mutable_contributingfactorvehicle4();
  PROTOBUF_NODISCARD std::string* release_contributingfactorvehicle4();
  void set_allocated_contributingfactorvehicle4(std::string* value);

  private:
  const std::string& _internal_contributingfactorvehicle4() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_contributingfactorvehicle4(
      const std::string& value);
  std::string* _internal_mutable_contributingfactorvehicle4();

  public:
  // string contributingFactorVehicle5 = 23;
  void clear_contributingfactorvehicle5() ;
  const std::string& contributingfactorvehicle5() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_contributingfactorvehicle5(Arg_&& arg, Args_... args);
  std::string* mutable_contributingfactorvehicle5();
  PROTOBUF_NODISCARD std::string* release_contributingfactorvehicle5();
  void set_allocated_contributingfactorvehicle5(std::string* value);

  private:
  const std::string& _internal_contributingfactorvehicle5() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_contributingfactorvehicle5(
      const std::string& value);
  std::string* _internal_mutable_contributingfactorvehicle5();

  public:
  // string vehicleTypeCode1 = 25;
  void clear_vehicletypecode1() ;
  const std::string& vehicletypecode1() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_vehicletypecode1(Arg_&& arg, Args_... args);
  std::string* mutable_vehicletypecode1();
  PROTOBUF_NODISCARD std::string* release_vehicletypecode1();
  void set_allocated_vehicletypecode1(std::string* value);

  private:
  const std::string& _internal_vehicletypecode1() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_vehicletypecode1(
      const std::string& value);
  std::string* _internal_mutable_vehicletypecode1();

  public:
  // string vehicleTypeCode2 = 26;
  void clear_vehicletypecode2() ;
  const std::string& vehicletypecode2() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_vehicletypecode2(Arg_&& arg, Args_... args);
  std::string* mutable_vehicletypecode2();
  PROTOBUF_NODISCARD std::string* release_vehicletypecode2();
  void set_allocated_vehicletypecode2(std::string* value);

  private:
  const std::string& _internal_vehicletypecode2() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_vehicletypecode2(
      const std::string& value);
  std::string* _internal_mutable_vehicletypecode2();

  public:
  // string vehicleTypeCode3 = 27;
  void clear_vehicletypecode3() ;
  const std::string& vehicletypecode3() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_vehicletypecode3(Arg_&& arg, Args_... args);
  std::string* mutable_vehicletypecode3();
  PROTOBUF_NODISCARD std::string* release_vehicletypecode3();
  void set_allocated_vehicletypecode3(std::string* value);

  private:
  const std::string& _internal_vehicletypecode3() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_vehicletypecode3(
      const std::string& value);
  std::string* _internal_mutable_vehicletypecode3();

  public:
  // string vehicleTypeCode4 = 28;
  void clear_vehicletypecode4() ;
  const std::string& vehicletypecode4() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_vehicletypecode4(Arg_&& arg, Args_... args);
  std::string* mutable_vehicletypecode4();
  PROTOBUF_NODISCARD std::string* release_vehicletypecode4();
  void set_allocated_vehicletypecode4(std::string* value);

  private:
  const std::string& _internal_vehicletypecode4() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_vehicletypecode4(
      const std::string& value);
  std::string* _internal_mutable_vehicletypecode4();

  public:
  // string vehicleTypeCode5 = 29;
  void clear_vehicletypecode5() ;
  const std::string& vehicletypecode5() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_vehicletypecode5(Arg_&& arg, Args_... args);
  std::string* mutable_vehicletypecode5();
  PROTOBUF_NODISCARD std::string* release_vehicletypecode5();
  void set_allocated_vehicletypecode5(std::string* value);

  private:
  const std::string& _internal_vehicletypecode5() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_vehicletypecode5(
      const std::string& value);
  std::string* _internal_mutable_vehicletypecode5();

  public:
  // double latitude = 5;
  void clear_latitude() ;
  double latitude() const;
  void set_latitude(double value);

  private:
  double _internal_latitude() const;
  void _internal_set_latitude(double value);

  public:
  // double longitude = 6;
  void clear_longitude() ;
  double longitude() const;
  void set_longitude(double value);

  private:
  double _internal_longitude() const;
  void _internal_set_longitude(double value);

  public:
  // int32 zipCode = 4;
  void clear_zipcode() ;
  ::int32_t zipcode() const;
  void set_zipcode(::int32_t value);

  private:
  ::int32_t _internal_zipcode() const;
  void _internal_set_zipcode(::int32_t value);

  public:
  // int32 numberOfPersonsInjured = 11;
  void clear_numberofpersonsinjured() ;
  ::int32_t numberofpersonsinjured() const;
  void set_numberofpersonsinjured(::int32_t value);

  private:
  ::int32_t _internal_numberofpersonsinjured() const;
  void _internal_set_numberofpersonsinjured(::int32_t value);

  public:
  // int32 numberOfPersonsKilled = 12;
  void clear_numberofpersonskilled() ;
  ::int32_t numberofpersonskilled() const;
  void set_numberofpersonskilled(::int32_t value);

  private:
  ::int32_t _internal_numberofpersonskilled() const;
  void _internal_set_numberofpersonskilled(::int32_t value);

  public:
  // int32 numberOfPedestriansInjured = 13;
  void clear_numberofpedestriansinjured() ;
  ::int32_t numberofpedestriansinjured() const;
  void set_numberofpedestriansinjured(::int32_t value);

  private:
  ::int32_t _internal_numberofpedestriansinjured() const;
  void _internal_set_numberofpedestriansinjured(::int32_t value);

  public:
  // int32 numberOfPedestriansKilled = 14;
  void clear_numberofpedestrianskilled() ;
  ::int32_t numberofpedestrianskilled() const;
  void set_numberofpedestrianskilled(::int32_t value);

  private:
  ::int32_t _internal_numberofpedestrianskilled() const;
  void _internal_set_numberofpedestrianskilled(::int32_t value);

  public:
  // int32 numberOfCyclistInjured = 15;
  void clear_numberofcyclistinjured() ;
  ::int32_t numberofcyclistinjured() const;
  void set_numberofcyclistinjured(::int32_t value);

  private:
  ::int32_t _internal_numberofcyclistinjured() const;
  void _internal_set_numberofcyclistinjured(::int32_t value);

  public:
  // int32 numberOfCyclistKilled = 16;
  void clear_numberofcyclistkilled() ;
  ::int32_t numberofcyclistkilled() const;
  void set_numberofcyclistkilled(::int32_t value);

  private:
  ::int32_t _internal_numberofcyclistkilled() const;
  void _internal_set_numberofcyclistkilled(::int32_t value);

  public:
  // int32 numberOfMotoristInjured = 17;
  void clear_numberofmotoristinjured() ;
  ::int32_t numberofmotoristinjured() const;
  void set_numberofmotoristinjured(::int32_t value);

  private:
  ::int32_t _internal_numberofmotoristinjured() const;
  void _internal_set_numberofmotoristinjured(::int32_t value);

  public:
  // int32 numberOfMotoristKilled = 18;
  void clear_numberofmotoristkilled() ;
  ::int32_t numberofmotoristkilled() const;
  void set_numberofmotoristkilled(::int32_t value);

  private:
  ::int32_t _internal_numberofmotoristkilled() const;
  void _internal_set_numberofmotoristkilled(::int32_t value);

  public:
  // int32 collisionId = 24;
  void clear_collisionid() ;
  ::int32_t collisionid() const;
  void set_collisionid(::int32_t value);

  private:
  ::int32_t _internal_collisionid() const;
  void _internal_set_collisionid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:crashrecord.CrashRecord)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 29, 0,
      339, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CrashRecord& from_msg);
    ::google::protobuf::internal::ArenaStringPtr crashdate_;
    ::google::protobuf::internal::ArenaStringPtr crashtime_;
    ::google::protobuf::internal::ArenaStringPtr borough_;
    ::google::protobuf::internal::ArenaStringPtr location_;
    ::google::protobuf::internal::ArenaStringPtr onstreetname_;
    ::google::protobuf::internal::ArenaStringPtr crossstreetname_;
    ::google::protobuf::internal::ArenaStringPtr offstreetname_;
    ::google::protobuf::internal::ArenaStringPtr contributingfactorvehicle1_;
    ::google::protobuf::internal::ArenaStringPtr contributingfactorvehicle2_;
    ::google::protobuf::internal::ArenaStringPtr contributingfactorvehicle3_;
    ::google::protobuf::internal::ArenaStringPtr contributingfactorvehicle4_;
    ::google::protobuf::internal::ArenaStringPtr contributingfactorvehicle5_;
    ::google::protobuf::internal::ArenaStringPtr vehicletypecode1_;
    ::google::protobuf::internal::ArenaStringPtr vehicletypecode2_;
    ::google::protobuf::internal::ArenaStringPtr vehicletypecode3_;
    ::google::protobuf::internal::ArenaStringPtr vehicletypecode4_;
    ::google::protobuf::internal::ArenaStringPtr vehicletypecode5_;
    double latitude_;
    double longitude_;
    ::int32_t zipcode_;
    ::int32_t numberofpersonsinjured_;
    ::int32_t numberofpersonskilled_;
    ::int32_t numberofpedestriansinjured_;
    ::int32_t numberofpedestrianskilled_;
    ::int32_t numberofcyclistinjured_;
    ::int32_t numberofcyclistkilled_;
    ::int32_t numberofmotoristinjured_;
    ::int32_t numberofmotoristkilled_;
    ::int32_t collisionid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_data_2eproto;
};
// -------------------------------------------------------------------

class ListCrashRecordsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crashrecord.ListCrashRecordsResponse) */ {
 public:
  inline ListCrashRecordsResponse() : ListCrashRecordsResponse(nullptr) {}
  ~ListCrashRecordsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListCrashRecordsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListCrashRecordsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListCrashRecordsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListCrashRecordsResponse(const ListCrashRecordsResponse& from) : ListCrashRecordsResponse(nullptr, from) {}
  inline ListCrashRecordsResponse(ListCrashRecordsResponse&& from) noexcept
      : ListCrashRecordsResponse(nullptr, std::move(from)) {}
  inline ListCrashRecordsResponse& operator=(const ListCrashRecordsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListCrashRecordsResponse& operator=(ListCrashRecordsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListCrashRecordsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListCrashRecordsResponse* internal_default_instance() {
    return reinterpret_cast<const ListCrashRecordsResponse*>(
        &_ListCrashRecordsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(ListCrashRecordsResponse& a, ListCrashRecordsResponse& b) { a.Swap(&b); }
  inline void Swap(ListCrashRecordsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListCrashRecordsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListCrashRecordsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListCrashRecordsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListCrashRecordsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListCrashRecordsResponse& from) { ListCrashRecordsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListCrashRecordsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crashrecord.ListCrashRecordsResponse"; }

 protected:
  explicit ListCrashRecordsResponse(::google::protobuf::Arena* arena);
  ListCrashRecordsResponse(::google::protobuf::Arena* arena, const ListCrashRecordsResponse& from);
  ListCrashRecordsResponse(::google::protobuf::Arena* arena, ListCrashRecordsResponse&& from) noexcept
      : ListCrashRecordsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRecordsFieldNumber = 1,
  };
  // repeated .crashrecord.CrashRecord records = 1;
  int records_size() const;
  private:
  int _internal_records_size() const;

  public:
  void clear_records() ;
  ::crashrecord::CrashRecord* mutable_records(int index);
  ::google::protobuf::RepeatedPtrField<::crashrecord::CrashRecord>* mutable_records();

  private:
  const ::google::protobuf::RepeatedPtrField<::crashrecord::CrashRecord>& _internal_records() const;
  ::google::protobuf::RepeatedPtrField<::crashrecord::CrashRecord>* _internal_mutable_records();
  public:
  const ::crashrecord::CrashRecord& records(int index) const;
  ::crashrecord::CrashRecord* add_records();
  const ::google::protobuf::RepeatedPtrField<::crashrecord::CrashRecord>& records() const;
  // @@protoc_insertion_point(class_scope:crashrecord.ListCrashRecordsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListCrashRecordsResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::crashrecord::CrashRecord > records_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_data_2eproto;
};
// -------------------------------------------------------------------

class GetCrashRecordResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crashrecord.GetCrashRecordResponse) */ {
 public:
  inline GetCrashRecordResponse() : GetCrashRecordResponse(nullptr) {}
  ~GetCrashRecordResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetCrashRecordResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetCrashRecordResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetCrashRecordResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetCrashRecordResponse(const GetCrashRecordResponse& from) : GetCrashRecordResponse(nullptr, from) {}
  inline GetCrashRecordResponse(GetCrashRecordResponse&& from) noexcept
      : GetCrashRecordResponse(nullptr, std::move(from)) {}
  inline GetCrashRecordResponse& operator=(const GetCrashRecordResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetCrashRecordResponse& operator=(GetCrashRecordResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetCrashRecordResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetCrashRecordResponse* internal_default_instance() {
    return reinterpret_cast<const GetCrashRecordResponse*>(
        &_GetCrashRecordResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(GetCrashRecordResponse& a, GetCrashRecordResponse& b) { a.Swap(&b); }
  inline void Swap(GetCrashRecordResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetCrashRecordResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetCrashRecordResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetCrashRecordResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetCrashRecordResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetCrashRecordResponse& from) { GetCrashRecordResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetCrashRecordResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crashrecord.GetCrashRecordResponse"; }

 protected:
  explicit GetCrashRecordResponse(::google::protobuf::Arena* arena);
  GetCrashRecordResponse(::google::protobuf::Arena* arena, const GetCrashRecordResponse& from);
  GetCrashRecordResponse(::google::protobuf::Arena* arena, GetCrashRecordResponse&& from) noexcept
      : GetCrashRecordResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRecordFieldNumber = 1,
  };
  // .crashrecord.CrashRecord record = 1;
  bool has_record() const;
  void clear_record() ;
  const ::crashrecord::CrashRecord& record() const;
  PROTOBUF_NODISCARD ::crashrecord::CrashRecord* release_record();
  ::crashrecord::CrashRecord* mutable_record();
  void set_allocated_record(::crashrecord::CrashRecord* value);
  void unsafe_arena_set_allocated_record(::crashrecord::CrashRecord* value);
  ::crashrecord::CrashRecord* unsafe_arena_release_record();

  private:
  const ::crashrecord::CrashRecord& _internal_record() const;
  ::crashrecord::CrashRecord* _internal_mutable_record();

  public:
  // @@protoc_insertion_point(class_scope:crashrecord.GetCrashRecordResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetCrashRecordResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::crashrecord::CrashRecord* record_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_data_2eproto;
};
// -------------------------------------------------------------------

class CreateCrashRecordRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crashrecord.CreateCrashRecordRequest) */ {
 public:
  inline CreateCrashRecordRequest() : CreateCrashRecordRequest(nullptr) {}
  ~CreateCrashRecordRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateCrashRecordRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateCrashRecordRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateCrashRecordRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateCrashRecordRequest(const CreateCrashRecordRequest& from) : CreateCrashRecordRequest(nullptr, from) {}
  inline CreateCrashRecordRequest(CreateCrashRecordRequest&& from) noexcept
      : CreateCrashRecordRequest(nullptr, std::move(from)) {}
  inline CreateCrashRecordRequest& operator=(const CreateCrashRecordRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateCrashRecordRequest& operator=(CreateCrashRecordRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateCrashRecordRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateCrashRecordRequest* internal_default_instance() {
    return reinterpret_cast<const CreateCrashRecordRequest*>(
        &_CreateCrashRecordRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(CreateCrashRecordRequest& a, CreateCrashRecordRequest& b) { a.Swap(&b); }
  inline void Swap(CreateCrashRecordRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateCrashRecordRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateCrashRecordRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateCrashRecordRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateCrashRecordRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateCrashRecordRequest& from) { CreateCrashRecordRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateCrashRecordRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crashrecord.CreateCrashRecordRequest"; }

 protected:
  explicit CreateCrashRecordRequest(::google::protobuf::Arena* arena);
  CreateCrashRecordRequest(::google::protobuf::Arena* arena, const CreateCrashRecordRequest& from);
  CreateCrashRecordRequest(::google::protobuf::Arena* arena, CreateCrashRecordRequest&& from) noexcept
      : CreateCrashRecordRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRecordFieldNumber = 1,
  };
  // .crashrecord.CrashRecord record = 1;
  bool has_record() const;
  void clear_record() ;
  const ::crashrecord::CrashRecord& record() const;
  PROTOBUF_NODISCARD ::crashrecord::CrashRecord* release_record();
  ::crashrecord::CrashRecord* mutable_record();
  void set_allocated_record(::crashrecord::CrashRecord* value);
  void unsafe_arena_set_allocated_record(::crashrecord::CrashRecord* value);
  ::crashrecord::CrashRecord* unsafe_arena_release_record();

  private:
  const ::crashrecord::CrashRecord& _internal_record() const;
  ::crashrecord::CrashRecord* _internal_mutable_record();

  public:
  // @@protoc_insertion_point(class_scope:crashrecord.CreateCrashRecordRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateCrashRecordRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::crashrecord::CrashRecord* record_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_data_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// CrashRecord

// string crashDate = 1;
inline void CrashRecord::clear_crashdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.crashdate_.ClearToEmpty();
}
inline const std::string& CrashRecord::crashdate() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crashrecord.CrashRecord.crashDate)
  return _internal_crashdate();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CrashRecord::set_crashdate(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.crashdate_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crashrecord.CrashRecord.crashDate)
}
inline std::string* CrashRecord::mutable_crashdate() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_crashdate();
  // @@protoc_insertion_point(field_mutable:crashrecord.CrashRecord.crashDate)
  return _s;
}
inline const std::string& CrashRecord::_internal_crashdate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.crashdate_.Get();
}
inline void CrashRecord::_internal_set_crashdate(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.crashdate_.Set(value, GetArena());
}
inline std::string* CrashRecord::_internal_mutable_crashdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.crashdate_.Mutable( GetArena());
}
inline std::string* CrashRecord::release_crashdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crashrecord.CrashRecord.crashDate)
  return _impl_.crashdate_.Release();
}
inline void CrashRecord::set_allocated_crashdate(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.crashdate_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.crashdate_.IsDefault()) {
    _impl_.crashdate_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crashrecord.CrashRecord.crashDate)
}

// string crashTime = 2;
inline void CrashRecord::clear_crashtime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.crashtime_.ClearToEmpty();
}
inline const std::string& CrashRecord::crashtime() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crashrecord.CrashRecord.crashTime)
  return _internal_crashtime();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CrashRecord::set_crashtime(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.crashtime_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crashrecord.CrashRecord.crashTime)
}
inline std::string* CrashRecord::mutable_crashtime() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_crashtime();
  // @@protoc_insertion_point(field_mutable:crashrecord.CrashRecord.crashTime)
  return _s;
}
inline const std::string& CrashRecord::_internal_crashtime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.crashtime_.Get();
}
inline void CrashRecord::_internal_set_crashtime(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.crashtime_.Set(value, GetArena());
}
inline std::string* CrashRecord::_internal_mutable_crashtime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.crashtime_.Mutable( GetArena());
}
inline std::string* CrashRecord::release_crashtime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crashrecord.CrashRecord.crashTime)
  return _impl_.crashtime_.Release();
}
inline void CrashRecord::set_allocated_crashtime(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.crashtime_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.crashtime_.IsDefault()) {
    _impl_.crashtime_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crashrecord.CrashRecord.crashTime)
}

// string borough = 3;
inline void CrashRecord::clear_borough() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.borough_.ClearToEmpty();
}
inline const std::string& CrashRecord::borough() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crashrecord.CrashRecord.borough)
  return _internal_borough();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CrashRecord::set_borough(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.borough_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crashrecord.CrashRecord.borough)
}
inline std::string* CrashRecord::mutable_borough() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_borough();
  // @@protoc_insertion_point(field_mutable:crashrecord.CrashRecord.borough)
  return _s;
}
inline const std::string& CrashRecord::_internal_borough() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.borough_.Get();
}
inline void CrashRecord::_internal_set_borough(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.borough_.Set(value, GetArena());
}
inline std::string* CrashRecord::_internal_mutable_borough() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.borough_.Mutable( GetArena());
}
inline std::string* CrashRecord::release_borough() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crashrecord.CrashRecord.borough)
  return _impl_.borough_.Release();
}
inline void CrashRecord::set_allocated_borough(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.borough_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.borough_.IsDefault()) {
    _impl_.borough_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crashrecord.CrashRecord.borough)
}

// int32 zipCode = 4;
inline void CrashRecord::clear_zipcode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.zipcode_ = 0;
}
inline ::int32_t CrashRecord::zipcode() const {
  // @@protoc_insertion_point(field_get:crashrecord.CrashRecord.zipCode)
  return _internal_zipcode();
}
inline void CrashRecord::set_zipcode(::int32_t value) {
  _internal_set_zipcode(value);
  // @@protoc_insertion_point(field_set:crashrecord.CrashRecord.zipCode)
}
inline ::int32_t CrashRecord::_internal_zipcode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.zipcode_;
}
inline void CrashRecord::_internal_set_zipcode(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.zipcode_ = value;
}

// double latitude = 5;
inline void CrashRecord::clear_latitude() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.latitude_ = 0;
}
inline double CrashRecord::latitude() const {
  // @@protoc_insertion_point(field_get:crashrecord.CrashRecord.latitude)
  return _internal_latitude();
}
inline void CrashRecord::set_latitude(double value) {
  _internal_set_latitude(value);
  // @@protoc_insertion_point(field_set:crashrecord.CrashRecord.latitude)
}
inline double CrashRecord::_internal_latitude() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.latitude_;
}
inline void CrashRecord::_internal_set_latitude(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.latitude_ = value;
}

// double longitude = 6;
inline void CrashRecord::clear_longitude() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.longitude_ = 0;
}
inline double CrashRecord::longitude() const {
  // @@protoc_insertion_point(field_get:crashrecord.CrashRecord.longitude)
  return _internal_longitude();
}
inline void CrashRecord::set_longitude(double value) {
  _internal_set_longitude(value);
  // @@protoc_insertion_point(field_set:crashrecord.CrashRecord.longitude)
}
inline double CrashRecord::_internal_longitude() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.longitude_;
}
inline void CrashRecord::_internal_set_longitude(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.longitude_ = value;
}

// string location = 7;
inline void CrashRecord::clear_location() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.location_.ClearToEmpty();
}
inline const std::string& CrashRecord::location() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crashrecord.CrashRecord.location)
  return _internal_location();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CrashRecord::set_location(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.location_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crashrecord.CrashRecord.location)
}
inline std::string* CrashRecord::mutable_location() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_location();
  // @@protoc_insertion_point(field_mutable:crashrecord.CrashRecord.location)
  return _s;
}
inline const std::string& CrashRecord::_internal_location() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.location_.Get();
}
inline void CrashRecord::_internal_set_location(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.location_.Set(value, GetArena());
}
inline std::string* CrashRecord::_internal_mutable_location() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.location_.Mutable( GetArena());
}
inline std::string* CrashRecord::release_location() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crashrecord.CrashRecord.location)
  return _impl_.location_.Release();
}
inline void CrashRecord::set_allocated_location(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.location_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.location_.IsDefault()) {
    _impl_.location_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crashrecord.CrashRecord.location)
}

// string onStreetName = 8;
inline void CrashRecord::clear_onstreetname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.onstreetname_.ClearToEmpty();
}
inline const std::string& CrashRecord::onstreetname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crashrecord.CrashRecord.onStreetName)
  return _internal_onstreetname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CrashRecord::set_onstreetname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.onstreetname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crashrecord.CrashRecord.onStreetName)
}
inline std::string* CrashRecord::mutable_onstreetname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_onstreetname();
  // @@protoc_insertion_point(field_mutable:crashrecord.CrashRecord.onStreetName)
  return _s;
}
inline const std::string& CrashRecord::_internal_onstreetname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.onstreetname_.Get();
}
inline void CrashRecord::_internal_set_onstreetname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.onstreetname_.Set(value, GetArena());
}
inline std::string* CrashRecord::_internal_mutable_onstreetname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.onstreetname_.Mutable( GetArena());
}
inline std::string* CrashRecord::release_onstreetname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crashrecord.CrashRecord.onStreetName)
  return _impl_.onstreetname_.Release();
}
inline void CrashRecord::set_allocated_onstreetname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.onstreetname_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.onstreetname_.IsDefault()) {
    _impl_.onstreetname_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crashrecord.CrashRecord.onStreetName)
}

// string crossStreetName = 9;
inline void CrashRecord::clear_crossstreetname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.crossstreetname_.ClearToEmpty();
}
inline const std::string& CrashRecord::crossstreetname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crashrecord.CrashRecord.crossStreetName)
  return _internal_crossstreetname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CrashRecord::set_crossstreetname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.crossstreetname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crashrecord.CrashRecord.crossStreetName)
}
inline std::string* CrashRecord::mutable_crossstreetname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_crossstreetname();
  // @@protoc_insertion_point(field_mutable:crashrecord.CrashRecord.crossStreetName)
  return _s;
}
inline const std::string& CrashRecord::_internal_crossstreetname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.crossstreetname_.Get();
}
inline void CrashRecord::_internal_set_crossstreetname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.crossstreetname_.Set(value, GetArena());
}
inline std::string* CrashRecord::_internal_mutable_crossstreetname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.crossstreetname_.Mutable( GetArena());
}
inline std::string* CrashRecord::release_crossstreetname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crashrecord.CrashRecord.crossStreetName)
  return _impl_.crossstreetname_.Release();
}
inline void CrashRecord::set_allocated_crossstreetname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.crossstreetname_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.crossstreetname_.IsDefault()) {
    _impl_.crossstreetname_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crashrecord.CrashRecord.crossStreetName)
}

// string offStreetName = 10;
inline void CrashRecord::clear_offstreetname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offstreetname_.ClearToEmpty();
}
inline const std::string& CrashRecord::offstreetname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crashrecord.CrashRecord.offStreetName)
  return _internal_offstreetname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CrashRecord::set_offstreetname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offstreetname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crashrecord.CrashRecord.offStreetName)
}
inline std::string* CrashRecord::mutable_offstreetname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_offstreetname();
  // @@protoc_insertion_point(field_mutable:crashrecord.CrashRecord.offStreetName)
  return _s;
}
inline const std::string& CrashRecord::_internal_offstreetname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.offstreetname_.Get();
}
inline void CrashRecord::_internal_set_offstreetname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offstreetname_.Set(value, GetArena());
}
inline std::string* CrashRecord::_internal_mutable_offstreetname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.offstreetname_.Mutable( GetArena());
}
inline std::string* CrashRecord::release_offstreetname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crashrecord.CrashRecord.offStreetName)
  return _impl_.offstreetname_.Release();
}
inline void CrashRecord::set_allocated_offstreetname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offstreetname_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.offstreetname_.IsDefault()) {
    _impl_.offstreetname_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crashrecord.CrashRecord.offStreetName)
}

// int32 numberOfPersonsInjured = 11;
inline void CrashRecord::clear_numberofpersonsinjured() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.numberofpersonsinjured_ = 0;
}
inline ::int32_t CrashRecord::numberofpersonsinjured() const {
  // @@protoc_insertion_point(field_get:crashrecord.CrashRecord.numberOfPersonsInjured)
  return _internal_numberofpersonsinjured();
}
inline void CrashRecord::set_numberofpersonsinjured(::int32_t value) {
  _internal_set_numberofpersonsinjured(value);
  // @@protoc_insertion_point(field_set:crashrecord.CrashRecord.numberOfPersonsInjured)
}
inline ::int32_t CrashRecord::_internal_numberofpersonsinjured() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.numberofpersonsinjured_;
}
inline void CrashRecord::_internal_set_numberofpersonsinjured(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.numberofpersonsinjured_ = value;
}

// int32 numberOfPersonsKilled = 12;
inline void CrashRecord::clear_numberofpersonskilled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.numberofpersonskilled_ = 0;
}
inline ::int32_t CrashRecord::numberofpersonskilled() const {
  // @@protoc_insertion_point(field_get:crashrecord.CrashRecord.numberOfPersonsKilled)
  return _internal_numberofpersonskilled();
}
inline void CrashRecord::set_numberofpersonskilled(::int32_t value) {
  _internal_set_numberofpersonskilled(value);
  // @@protoc_insertion_point(field_set:crashrecord.CrashRecord.numberOfPersonsKilled)
}
inline ::int32_t CrashRecord::_internal_numberofpersonskilled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.numberofpersonskilled_;
}
inline void CrashRecord::_internal_set_numberofpersonskilled(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.numberofpersonskilled_ = value;
}

// int32 numberOfPedestriansInjured = 13;
inline void CrashRecord::clear_numberofpedestriansinjured() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.numberofpedestriansinjured_ = 0;
}
inline ::int32_t CrashRecord::numberofpedestriansinjured() const {
  // @@protoc_insertion_point(field_get:crashrecord.CrashRecord.numberOfPedestriansInjured)
  return _internal_numberofpedestriansinjured();
}
inline void CrashRecord::set_numberofpedestriansinjured(::int32_t value) {
  _internal_set_numberofpedestriansinjured(value);
  // @@protoc_insertion_point(field_set:crashrecord.CrashRecord.numberOfPedestriansInjured)
}
inline ::int32_t CrashRecord::_internal_numberofpedestriansinjured() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.numberofpedestriansinjured_;
}
inline void CrashRecord::_internal_set_numberofpedestriansinjured(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.numberofpedestriansinjured_ = value;
}

// int32 numberOfPedestriansKilled = 14;
inline void CrashRecord::clear_numberofpedestrianskilled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.numberofpedestrianskilled_ = 0;
}
inline ::int32_t CrashRecord::numberofpedestrianskilled() const {
  // @@protoc_insertion_point(field_get:crashrecord.CrashRecord.numberOfPedestriansKilled)
  return _internal_numberofpedestrianskilled();
}
inline void CrashRecord::set_numberofpedestrianskilled(::int32_t value) {
  _internal_set_numberofpedestrianskilled(value);
  // @@protoc_insertion_point(field_set:crashrecord.CrashRecord.numberOfPedestriansKilled)
}
inline ::int32_t CrashRecord::_internal_numberofpedestrianskilled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.numberofpedestrianskilled_;
}
inline void CrashRecord::_internal_set_numberofpedestrianskilled(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.numberofpedestrianskilled_ = value;
}

// int32 numberOfCyclistInjured = 15;
inline void CrashRecord::clear_numberofcyclistinjured() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.numberofcyclistinjured_ = 0;
}
inline ::int32_t CrashRecord::numberofcyclistinjured() const {
  // @@protoc_insertion_point(field_get:crashrecord.CrashRecord.numberOfCyclistInjured)
  return _internal_numberofcyclistinjured();
}
inline void CrashRecord::set_numberofcyclistinjured(::int32_t value) {
  _internal_set_numberofcyclistinjured(value);
  // @@protoc_insertion_point(field_set:crashrecord.CrashRecord.numberOfCyclistInjured)
}
inline ::int32_t CrashRecord::_internal_numberofcyclistinjured() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.numberofcyclistinjured_;
}
inline void CrashRecord::_internal_set_numberofcyclistinjured(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.numberofcyclistinjured_ = value;
}

// int32 numberOfCyclistKilled = 16;
inline void CrashRecord::clear_numberofcyclistkilled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.numberofcyclistkilled_ = 0;
}
inline ::int32_t CrashRecord::numberofcyclistkilled() const {
  // @@protoc_insertion_point(field_get:crashrecord.CrashRecord.numberOfCyclistKilled)
  return _internal_numberofcyclistkilled();
}
inline void CrashRecord::set_numberofcyclistkilled(::int32_t value) {
  _internal_set_numberofcyclistkilled(value);
  // @@protoc_insertion_point(field_set:crashrecord.CrashRecord.numberOfCyclistKilled)
}
inline ::int32_t CrashRecord::_internal_numberofcyclistkilled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.numberofcyclistkilled_;
}
inline void CrashRecord::_internal_set_numberofcyclistkilled(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.numberofcyclistkilled_ = value;
}

// int32 numberOfMotoristInjured = 17;
inline void CrashRecord::clear_numberofmotoristinjured() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.numberofmotoristinjured_ = 0;
}
inline ::int32_t CrashRecord::numberofmotoristinjured() const {
  // @@protoc_insertion_point(field_get:crashrecord.CrashRecord.numberOfMotoristInjured)
  return _internal_numberofmotoristinjured();
}
inline void CrashRecord::set_numberofmotoristinjured(::int32_t value) {
  _internal_set_numberofmotoristinjured(value);
  // @@protoc_insertion_point(field_set:crashrecord.CrashRecord.numberOfMotoristInjured)
}
inline ::int32_t CrashRecord::_internal_numberofmotoristinjured() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.numberofmotoristinjured_;
}
inline void CrashRecord::_internal_set_numberofmotoristinjured(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.numberofmotoristinjured_ = value;
}

// int32 numberOfMotoristKilled = 18;
inline void CrashRecord::clear_numberofmotoristkilled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.numberofmotoristkilled_ = 0;
}
inline ::int32_t CrashRecord::numberofmotoristkilled() const {
  // @@protoc_insertion_point(field_get:crashrecord.CrashRecord.numberOfMotoristKilled)
  return _internal_numberofmotoristkilled();
}
inline void CrashRecord::set_numberofmotoristkilled(::int32_t value) {
  _internal_set_numberofmotoristkilled(value);
  // @@protoc_insertion_point(field_set:crashrecord.CrashRecord.numberOfMotoristKilled)
}
inline ::int32_t CrashRecord::_internal_numberofmotoristkilled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.numberofmotoristkilled_;
}
inline void CrashRecord::_internal_set_numberofmotoristkilled(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.numberofmotoristkilled_ = value;
}

// string contributingFactorVehicle1 = 19;
inline void CrashRecord::clear_contributingfactorvehicle1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contributingfactorvehicle1_.ClearToEmpty();
}
inline const std::string& CrashRecord::contributingfactorvehicle1() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crashrecord.CrashRecord.contributingFactorVehicle1)
  return _internal_contributingfactorvehicle1();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CrashRecord::set_contributingfactorvehicle1(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contributingfactorvehicle1_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crashrecord.CrashRecord.contributingFactorVehicle1)
}
inline std::string* CrashRecord::mutable_contributingfactorvehicle1() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_contributingfactorvehicle1();
  // @@protoc_insertion_point(field_mutable:crashrecord.CrashRecord.contributingFactorVehicle1)
  return _s;
}
inline const std::string& CrashRecord::_internal_contributingfactorvehicle1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.contributingfactorvehicle1_.Get();
}
inline void CrashRecord::_internal_set_contributingfactorvehicle1(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contributingfactorvehicle1_.Set(value, GetArena());
}
inline std::string* CrashRecord::_internal_mutable_contributingfactorvehicle1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.contributingfactorvehicle1_.Mutable( GetArena());
}
inline std::string* CrashRecord::release_contributingfactorvehicle1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crashrecord.CrashRecord.contributingFactorVehicle1)
  return _impl_.contributingfactorvehicle1_.Release();
}
inline void CrashRecord::set_allocated_contributingfactorvehicle1(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contributingfactorvehicle1_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.contributingfactorvehicle1_.IsDefault()) {
    _impl_.contributingfactorvehicle1_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crashrecord.CrashRecord.contributingFactorVehicle1)
}

// string contributingFactorVehicle2 = 20;
inline void CrashRecord::clear_contributingfactorvehicle2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contributingfactorvehicle2_.ClearToEmpty();
}
inline const std::string& CrashRecord::contributingfactorvehicle2() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crashrecord.CrashRecord.contributingFactorVehicle2)
  return _internal_contributingfactorvehicle2();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CrashRecord::set_contributingfactorvehicle2(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contributingfactorvehicle2_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crashrecord.CrashRecord.contributingFactorVehicle2)
}
inline std::string* CrashRecord::mutable_contributingfactorvehicle2() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_contributingfactorvehicle2();
  // @@protoc_insertion_point(field_mutable:crashrecord.CrashRecord.contributingFactorVehicle2)
  return _s;
}
inline const std::string& CrashRecord::_internal_contributingfactorvehicle2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.contributingfactorvehicle2_.Get();
}
inline void CrashRecord::_internal_set_contributingfactorvehicle2(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contributingfactorvehicle2_.Set(value, GetArena());
}
inline std::string* CrashRecord::_internal_mutable_contributingfactorvehicle2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.contributingfactorvehicle2_.Mutable( GetArena());
}
inline std::string* CrashRecord::release_contributingfactorvehicle2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crashrecord.CrashRecord.contributingFactorVehicle2)
  return _impl_.contributingfactorvehicle2_.Release();
}
inline void CrashRecord::set_allocated_contributingfactorvehicle2(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contributingfactorvehicle2_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.contributingfactorvehicle2_.IsDefault()) {
    _impl_.contributingfactorvehicle2_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crashrecord.CrashRecord.contributingFactorVehicle2)
}

// string contributingFactorVehicle3 = 21;
inline void CrashRecord::clear_contributingfactorvehicle3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contributingfactorvehicle3_.ClearToEmpty();
}
inline const std::string& CrashRecord::contributingfactorvehicle3() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crashrecord.CrashRecord.contributingFactorVehicle3)
  return _internal_contributingfactorvehicle3();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CrashRecord::set_contributingfactorvehicle3(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contributingfactorvehicle3_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crashrecord.CrashRecord.contributingFactorVehicle3)
}
inline std::string* CrashRecord::mutable_contributingfactorvehicle3() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_contributingfactorvehicle3();
  // @@protoc_insertion_point(field_mutable:crashrecord.CrashRecord.contributingFactorVehicle3)
  return _s;
}
inline const std::string& CrashRecord::_internal_contributingfactorvehicle3() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.contributingfactorvehicle3_.Get();
}
inline void CrashRecord::_internal_set_contributingfactorvehicle3(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contributingfactorvehicle3_.Set(value, GetArena());
}
inline std::string* CrashRecord::_internal_mutable_contributingfactorvehicle3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.contributingfactorvehicle3_.Mutable( GetArena());
}
inline std::string* CrashRecord::release_contributingfactorvehicle3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crashrecord.CrashRecord.contributingFactorVehicle3)
  return _impl_.contributingfactorvehicle3_.Release();
}
inline void CrashRecord::set_allocated_contributingfactorvehicle3(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contributingfactorvehicle3_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.contributingfactorvehicle3_.IsDefault()) {
    _impl_.contributingfactorvehicle3_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crashrecord.CrashRecord.contributingFactorVehicle3)
}

// string contributingFactorVehicle4 = 22;
inline void CrashRecord::clear_contributingfactorvehicle4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contributingfactorvehicle4_.ClearToEmpty();
}
inline const std::string& CrashRecord::contributingfactorvehicle4() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crashrecord.CrashRecord.contributingFactorVehicle4)
  return _internal_contributingfactorvehicle4();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CrashRecord::set_contributingfactorvehicle4(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contributingfactorvehicle4_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crashrecord.CrashRecord.contributingFactorVehicle4)
}
inline std::string* CrashRecord::mutable_contributingfactorvehicle4() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_contributingfactorvehicle4();
  // @@protoc_insertion_point(field_mutable:crashrecord.CrashRecord.contributingFactorVehicle4)
  return _s;
}
inline const std::string& CrashRecord::_internal_contributingfactorvehicle4() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.contributingfactorvehicle4_.Get();
}
inline void CrashRecord::_internal_set_contributingfactorvehicle4(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contributingfactorvehicle4_.Set(value, GetArena());
}
inline std::string* CrashRecord::_internal_mutable_contributingfactorvehicle4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.contributingfactorvehicle4_.Mutable( GetArena());
}
inline std::string* CrashRecord::release_contributingfactorvehicle4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crashrecord.CrashRecord.contributingFactorVehicle4)
  return _impl_.contributingfactorvehicle4_.Release();
}
inline void CrashRecord::set_allocated_contributingfactorvehicle4(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contributingfactorvehicle4_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.contributingfactorvehicle4_.IsDefault()) {
    _impl_.contributingfactorvehicle4_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crashrecord.CrashRecord.contributingFactorVehicle4)
}

// string contributingFactorVehicle5 = 23;
inline void CrashRecord::clear_contributingfactorvehicle5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contributingfactorvehicle5_.ClearToEmpty();
}
inline const std::string& CrashRecord::contributingfactorvehicle5() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crashrecord.CrashRecord.contributingFactorVehicle5)
  return _internal_contributingfactorvehicle5();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CrashRecord::set_contributingfactorvehicle5(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contributingfactorvehicle5_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crashrecord.CrashRecord.contributingFactorVehicle5)
}
inline std::string* CrashRecord::mutable_contributingfactorvehicle5() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_contributingfactorvehicle5();
  // @@protoc_insertion_point(field_mutable:crashrecord.CrashRecord.contributingFactorVehicle5)
  return _s;
}
inline const std::string& CrashRecord::_internal_contributingfactorvehicle5() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.contributingfactorvehicle5_.Get();
}
inline void CrashRecord::_internal_set_contributingfactorvehicle5(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contributingfactorvehicle5_.Set(value, GetArena());
}
inline std::string* CrashRecord::_internal_mutable_contributingfactorvehicle5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.contributingfactorvehicle5_.Mutable( GetArena());
}
inline std::string* CrashRecord::release_contributingfactorvehicle5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crashrecord.CrashRecord.contributingFactorVehicle5)
  return _impl_.contributingfactorvehicle5_.Release();
}
inline void CrashRecord::set_allocated_contributingfactorvehicle5(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contributingfactorvehicle5_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.contributingfactorvehicle5_.IsDefault()) {
    _impl_.contributingfactorvehicle5_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crashrecord.CrashRecord.contributingFactorVehicle5)
}

// int32 collisionId = 24;
inline void CrashRecord::clear_collisionid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.collisionid_ = 0;
}
inline ::int32_t CrashRecord::collisionid() const {
  // @@protoc_insertion_point(field_get:crashrecord.CrashRecord.collisionId)
  return _internal_collisionid();
}
inline void CrashRecord::set_collisionid(::int32_t value) {
  _internal_set_collisionid(value);
  // @@protoc_insertion_point(field_set:crashrecord.CrashRecord.collisionId)
}
inline ::int32_t CrashRecord::_internal_collisionid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.collisionid_;
}
inline void CrashRecord::_internal_set_collisionid(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.collisionid_ = value;
}

// string vehicleTypeCode1 = 25;
inline void CrashRecord::clear_vehicletypecode1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vehicletypecode1_.ClearToEmpty();
}
inline const std::string& CrashRecord::vehicletypecode1() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crashrecord.CrashRecord.vehicleTypeCode1)
  return _internal_vehicletypecode1();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CrashRecord::set_vehicletypecode1(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vehicletypecode1_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crashrecord.CrashRecord.vehicleTypeCode1)
}
inline std::string* CrashRecord::mutable_vehicletypecode1() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_vehicletypecode1();
  // @@protoc_insertion_point(field_mutable:crashrecord.CrashRecord.vehicleTypeCode1)
  return _s;
}
inline const std::string& CrashRecord::_internal_vehicletypecode1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.vehicletypecode1_.Get();
}
inline void CrashRecord::_internal_set_vehicletypecode1(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vehicletypecode1_.Set(value, GetArena());
}
inline std::string* CrashRecord::_internal_mutable_vehicletypecode1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.vehicletypecode1_.Mutable( GetArena());
}
inline std::string* CrashRecord::release_vehicletypecode1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crashrecord.CrashRecord.vehicleTypeCode1)
  return _impl_.vehicletypecode1_.Release();
}
inline void CrashRecord::set_allocated_vehicletypecode1(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vehicletypecode1_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.vehicletypecode1_.IsDefault()) {
    _impl_.vehicletypecode1_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crashrecord.CrashRecord.vehicleTypeCode1)
}

// string vehicleTypeCode2 = 26;
inline void CrashRecord::clear_vehicletypecode2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vehicletypecode2_.ClearToEmpty();
}
inline const std::string& CrashRecord::vehicletypecode2() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crashrecord.CrashRecord.vehicleTypeCode2)
  return _internal_vehicletypecode2();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CrashRecord::set_vehicletypecode2(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vehicletypecode2_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crashrecord.CrashRecord.vehicleTypeCode2)
}
inline std::string* CrashRecord::mutable_vehicletypecode2() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_vehicletypecode2();
  // @@protoc_insertion_point(field_mutable:crashrecord.CrashRecord.vehicleTypeCode2)
  return _s;
}
inline const std::string& CrashRecord::_internal_vehicletypecode2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.vehicletypecode2_.Get();
}
inline void CrashRecord::_internal_set_vehicletypecode2(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vehicletypecode2_.Set(value, GetArena());
}
inline std::string* CrashRecord::_internal_mutable_vehicletypecode2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.vehicletypecode2_.Mutable( GetArena());
}
inline std::string* CrashRecord::release_vehicletypecode2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crashrecord.CrashRecord.vehicleTypeCode2)
  return _impl_.vehicletypecode2_.Release();
}
inline void CrashRecord::set_allocated_vehicletypecode2(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vehicletypecode2_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.vehicletypecode2_.IsDefault()) {
    _impl_.vehicletypecode2_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crashrecord.CrashRecord.vehicleTypeCode2)
}

// string vehicleTypeCode3 = 27;
inline void CrashRecord::clear_vehicletypecode3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vehicletypecode3_.ClearToEmpty();
}
inline const std::string& CrashRecord::vehicletypecode3() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crashrecord.CrashRecord.vehicleTypeCode3)
  return _internal_vehicletypecode3();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CrashRecord::set_vehicletypecode3(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vehicletypecode3_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crashrecord.CrashRecord.vehicleTypeCode3)
}
inline std::string* CrashRecord::mutable_vehicletypecode3() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_vehicletypecode3();
  // @@protoc_insertion_point(field_mutable:crashrecord.CrashRecord.vehicleTypeCode3)
  return _s;
}
inline const std::string& CrashRecord::_internal_vehicletypecode3() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.vehicletypecode3_.Get();
}
inline void CrashRecord::_internal_set_vehicletypecode3(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vehicletypecode3_.Set(value, GetArena());
}
inline std::string* CrashRecord::_internal_mutable_vehicletypecode3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.vehicletypecode3_.Mutable( GetArena());
}
inline std::string* CrashRecord::release_vehicletypecode3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crashrecord.CrashRecord.vehicleTypeCode3)
  return _impl_.vehicletypecode3_.Release();
}
inline void CrashRecord::set_allocated_vehicletypecode3(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vehicletypecode3_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.vehicletypecode3_.IsDefault()) {
    _impl_.vehicletypecode3_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crashrecord.CrashRecord.vehicleTypeCode3)
}

// string vehicleTypeCode4 = 28;
inline void CrashRecord::clear_vehicletypecode4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vehicletypecode4_.ClearToEmpty();
}
inline const std::string& CrashRecord::vehicletypecode4() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crashrecord.CrashRecord.vehicleTypeCode4)
  return _internal_vehicletypecode4();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CrashRecord::set_vehicletypecode4(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vehicletypecode4_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crashrecord.CrashRecord.vehicleTypeCode4)
}
inline std::string* CrashRecord::mutable_vehicletypecode4() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_vehicletypecode4();
  // @@protoc_insertion_point(field_mutable:crashrecord.CrashRecord.vehicleTypeCode4)
  return _s;
}
inline const std::string& CrashRecord::_internal_vehicletypecode4() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.vehicletypecode4_.Get();
}
inline void CrashRecord::_internal_set_vehicletypecode4(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vehicletypecode4_.Set(value, GetArena());
}
inline std::string* CrashRecord::_internal_mutable_vehicletypecode4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.vehicletypecode4_.Mutable( GetArena());
}
inline std::string* CrashRecord::release_vehicletypecode4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crashrecord.CrashRecord.vehicleTypeCode4)
  return _impl_.vehicletypecode4_.Release();
}
inline void CrashRecord::set_allocated_vehicletypecode4(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vehicletypecode4_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.vehicletypecode4_.IsDefault()) {
    _impl_.vehicletypecode4_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crashrecord.CrashRecord.vehicleTypeCode4)
}

// string vehicleTypeCode5 = 29;
inline void CrashRecord::clear_vehicletypecode5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vehicletypecode5_.ClearToEmpty();
}
inline const std::string& CrashRecord::vehicletypecode5() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crashrecord.CrashRecord.vehicleTypeCode5)
  return _internal_vehicletypecode5();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CrashRecord::set_vehicletypecode5(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vehicletypecode5_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crashrecord.CrashRecord.vehicleTypeCode5)
}
inline std::string* CrashRecord::mutable_vehicletypecode5() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_vehicletypecode5();
  // @@protoc_insertion_point(field_mutable:crashrecord.CrashRecord.vehicleTypeCode5)
  return _s;
}
inline const std::string& CrashRecord::_internal_vehicletypecode5() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.vehicletypecode5_.Get();
}
inline void CrashRecord::_internal_set_vehicletypecode5(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vehicletypecode5_.Set(value, GetArena());
}
inline std::string* CrashRecord::_internal_mutable_vehicletypecode5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.vehicletypecode5_.Mutable( GetArena());
}
inline std::string* CrashRecord::release_vehicletypecode5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crashrecord.CrashRecord.vehicleTypeCode5)
  return _impl_.vehicletypecode5_.Release();
}
inline void CrashRecord::set_allocated_vehicletypecode5(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vehicletypecode5_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.vehicletypecode5_.IsDefault()) {
    _impl_.vehicletypecode5_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crashrecord.CrashRecord.vehicleTypeCode5)
}

// -------------------------------------------------------------------

// CreateCrashRecordRequest

// .crashrecord.CrashRecord record = 1;
inline bool CreateCrashRecordRequest::has_record() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.record_ != nullptr);
  return value;
}
inline void CreateCrashRecordRequest::clear_record() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.record_ != nullptr) _impl_.record_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::crashrecord::CrashRecord& CreateCrashRecordRequest::_internal_record() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::crashrecord::CrashRecord* p = _impl_.record_;
  return p != nullptr ? *p : reinterpret_cast<const ::crashrecord::CrashRecord&>(::crashrecord::_CrashRecord_default_instance_);
}
inline const ::crashrecord::CrashRecord& CreateCrashRecordRequest::record() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crashrecord.CreateCrashRecordRequest.record)
  return _internal_record();
}
inline void CreateCrashRecordRequest::unsafe_arena_set_allocated_record(::crashrecord::CrashRecord* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.record_);
  }
  _impl_.record_ = reinterpret_cast<::crashrecord::CrashRecord*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:crashrecord.CreateCrashRecordRequest.record)
}
inline ::crashrecord::CrashRecord* CreateCrashRecordRequest::release_record() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::crashrecord::CrashRecord* released = _impl_.record_;
  _impl_.record_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::crashrecord::CrashRecord* CreateCrashRecordRequest::unsafe_arena_release_record() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crashrecord.CreateCrashRecordRequest.record)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::crashrecord::CrashRecord* temp = _impl_.record_;
  _impl_.record_ = nullptr;
  return temp;
}
inline ::crashrecord::CrashRecord* CreateCrashRecordRequest::_internal_mutable_record() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.record_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::crashrecord::CrashRecord>(GetArena());
    _impl_.record_ = reinterpret_cast<::crashrecord::CrashRecord*>(p);
  }
  return _impl_.record_;
}
inline ::crashrecord::CrashRecord* CreateCrashRecordRequest::mutable_record() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::crashrecord::CrashRecord* _msg = _internal_mutable_record();
  // @@protoc_insertion_point(field_mutable:crashrecord.CreateCrashRecordRequest.record)
  return _msg;
}
inline void CreateCrashRecordRequest::set_allocated_record(::crashrecord::CrashRecord* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.record_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.record_ = reinterpret_cast<::crashrecord::CrashRecord*>(value);
  // @@protoc_insertion_point(field_set_allocated:crashrecord.CreateCrashRecordRequest.record)
}

// -------------------------------------------------------------------

// CreateCrashRecordResponse

// bool success = 1;
inline void CreateCrashRecordResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool CreateCrashRecordResponse::success() const {
  // @@protoc_insertion_point(field_get:crashrecord.CreateCrashRecordResponse.success)
  return _internal_success();
}
inline void CreateCrashRecordResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:crashrecord.CreateCrashRecordResponse.success)
}
inline bool CreateCrashRecordResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void CreateCrashRecordResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// string message = 2;
inline void CreateCrashRecordResponse::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& CreateCrashRecordResponse::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crashrecord.CreateCrashRecordResponse.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateCrashRecordResponse::set_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crashrecord.CreateCrashRecordResponse.message)
}
inline std::string* CreateCrashRecordResponse::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:crashrecord.CreateCrashRecordResponse.message)
  return _s;
}
inline const std::string& CreateCrashRecordResponse::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void CreateCrashRecordResponse::_internal_set_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(value, GetArena());
}
inline std::string* CreateCrashRecordResponse::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* CreateCrashRecordResponse::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crashrecord.CreateCrashRecordResponse.message)
  return _impl_.message_.Release();
}
inline void CreateCrashRecordResponse::set_allocated_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crashrecord.CreateCrashRecordResponse.message)
}

// -------------------------------------------------------------------

// GetCrashRecordRequest

// int32 collisionId = 1;
inline void GetCrashRecordRequest::clear_collisionid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.collisionid_ = 0;
}
inline ::int32_t GetCrashRecordRequest::collisionid() const {
  // @@protoc_insertion_point(field_get:crashrecord.GetCrashRecordRequest.collisionId)
  return _internal_collisionid();
}
inline void GetCrashRecordRequest::set_collisionid(::int32_t value) {
  _internal_set_collisionid(value);
  // @@protoc_insertion_point(field_set:crashrecord.GetCrashRecordRequest.collisionId)
}
inline ::int32_t GetCrashRecordRequest::_internal_collisionid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.collisionid_;
}
inline void GetCrashRecordRequest::_internal_set_collisionid(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.collisionid_ = value;
}

// -------------------------------------------------------------------

// GetCrashRecordResponse

// .crashrecord.CrashRecord record = 1;
inline bool GetCrashRecordResponse::has_record() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.record_ != nullptr);
  return value;
}
inline void GetCrashRecordResponse::clear_record() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.record_ != nullptr) _impl_.record_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::crashrecord::CrashRecord& GetCrashRecordResponse::_internal_record() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::crashrecord::CrashRecord* p = _impl_.record_;
  return p != nullptr ? *p : reinterpret_cast<const ::crashrecord::CrashRecord&>(::crashrecord::_CrashRecord_default_instance_);
}
inline const ::crashrecord::CrashRecord& GetCrashRecordResponse::record() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crashrecord.GetCrashRecordResponse.record)
  return _internal_record();
}
inline void GetCrashRecordResponse::unsafe_arena_set_allocated_record(::crashrecord::CrashRecord* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.record_);
  }
  _impl_.record_ = reinterpret_cast<::crashrecord::CrashRecord*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:crashrecord.GetCrashRecordResponse.record)
}
inline ::crashrecord::CrashRecord* GetCrashRecordResponse::release_record() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::crashrecord::CrashRecord* released = _impl_.record_;
  _impl_.record_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::crashrecord::CrashRecord* GetCrashRecordResponse::unsafe_arena_release_record() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crashrecord.GetCrashRecordResponse.record)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::crashrecord::CrashRecord* temp = _impl_.record_;
  _impl_.record_ = nullptr;
  return temp;
}
inline ::crashrecord::CrashRecord* GetCrashRecordResponse::_internal_mutable_record() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.record_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::crashrecord::CrashRecord>(GetArena());
    _impl_.record_ = reinterpret_cast<::crashrecord::CrashRecord*>(p);
  }
  return _impl_.record_;
}
inline ::crashrecord::CrashRecord* GetCrashRecordResponse::mutable_record() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::crashrecord::CrashRecord* _msg = _internal_mutable_record();
  // @@protoc_insertion_point(field_mutable:crashrecord.GetCrashRecordResponse.record)
  return _msg;
}
inline void GetCrashRecordResponse::set_allocated_record(::crashrecord::CrashRecord* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.record_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.record_ = reinterpret_cast<::crashrecord::CrashRecord*>(value);
  // @@protoc_insertion_point(field_set_allocated:crashrecord.GetCrashRecordResponse.record)
}

// -------------------------------------------------------------------

// ListCrashRecordsRequest

// -------------------------------------------------------------------

// ListCrashRecordsResponse

// repeated .crashrecord.CrashRecord records = 1;
inline int ListCrashRecordsResponse::_internal_records_size() const {
  return _internal_records().size();
}
inline int ListCrashRecordsResponse::records_size() const {
  return _internal_records_size();
}
inline void ListCrashRecordsResponse::clear_records() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.records_.Clear();
}
inline ::crashrecord::CrashRecord* ListCrashRecordsResponse::mutable_records(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:crashrecord.ListCrashRecordsResponse.records)
  return _internal_mutable_records()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::crashrecord::CrashRecord>* ListCrashRecordsResponse::mutable_records()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:crashrecord.ListCrashRecordsResponse.records)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_records();
}
inline const ::crashrecord::CrashRecord& ListCrashRecordsResponse::records(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crashrecord.ListCrashRecordsResponse.records)
  return _internal_records().Get(index);
}
inline ::crashrecord::CrashRecord* ListCrashRecordsResponse::add_records() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::crashrecord::CrashRecord* _add = _internal_mutable_records()->Add();
  // @@protoc_insertion_point(field_add:crashrecord.ListCrashRecordsResponse.records)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::crashrecord::CrashRecord>& ListCrashRecordsResponse::records() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:crashrecord.ListCrashRecordsResponse.records)
  return _internal_records();
}
inline const ::google::protobuf::RepeatedPtrField<::crashrecord::CrashRecord>&
ListCrashRecordsResponse::_internal_records() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.records_;
}
inline ::google::protobuf::RepeatedPtrField<::crashrecord::CrashRecord>*
ListCrashRecordsResponse::_internal_mutable_records() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.records_;
}

// -------------------------------------------------------------------

// DeleteCrashRecordRequest

// int32 collisionId = 1;
inline void DeleteCrashRecordRequest::clear_collisionid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.collisionid_ = 0;
}
inline ::int32_t DeleteCrashRecordRequest::collisionid() const {
  // @@protoc_insertion_point(field_get:crashrecord.DeleteCrashRecordRequest.collisionId)
  return _internal_collisionid();
}
inline void DeleteCrashRecordRequest::set_collisionid(::int32_t value) {
  _internal_set_collisionid(value);
  // @@protoc_insertion_point(field_set:crashrecord.DeleteCrashRecordRequest.collisionId)
}
inline ::int32_t DeleteCrashRecordRequest::_internal_collisionid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.collisionid_;
}
inline void DeleteCrashRecordRequest::_internal_set_collisionid(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.collisionid_ = value;
}

// -------------------------------------------------------------------

// DeleteCrashRecordResponse

// bool success = 1;
inline void DeleteCrashRecordResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool DeleteCrashRecordResponse::success() const {
  // @@protoc_insertion_point(field_get:crashrecord.DeleteCrashRecordResponse.success)
  return _internal_success();
}
inline void DeleteCrashRecordResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:crashrecord.DeleteCrashRecordResponse.success)
}
inline bool DeleteCrashRecordResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void DeleteCrashRecordResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// string message = 2;
inline void DeleteCrashRecordResponse::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& DeleteCrashRecordResponse::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crashrecord.DeleteCrashRecordResponse.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeleteCrashRecordResponse::set_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crashrecord.DeleteCrashRecordResponse.message)
}
inline std::string* DeleteCrashRecordResponse::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:crashrecord.DeleteCrashRecordResponse.message)
  return _s;
}
inline const std::string& DeleteCrashRecordResponse::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void DeleteCrashRecordResponse::_internal_set_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(value, GetArena());
}
inline std::string* DeleteCrashRecordResponse::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* DeleteCrashRecordResponse::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crashrecord.DeleteCrashRecordResponse.message)
  return _impl_.message_.Release();
}
inline void DeleteCrashRecordResponse::set_allocated_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crashrecord.DeleteCrashRecordResponse.message)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace crashrecord


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // data_2eproto_2epb_2eh
